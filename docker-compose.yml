version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zkbridge-postgres
    environment:
      POSTGRES_DB: zkbridge
      POSTGRES_USER: zkbridge
      POSTGRES_PASSWORD: zkbridge123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zkbridge-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zkbridge -d zkbridge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: zkbridge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zkbridge-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zkbridge-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://zkbridge:zkbridge123@postgres:5432/zkbridge
      REDIS_URL: redis://redis:6379
      PORT: 3001
      BITCOIN_RPC_HOST: host.docker.internal
      BITCOIN_RPC_PORT: 18332
      BITCOIN_RPC_USER: bitcoin
      BITCOIN_RPC_PASSWORD: password
      ETHEREUM_RPC_URL: https://sepolia.infura.io/v3/YOUR_PROJECT_ID
      ETHEREUM_PRIVATE_KEY: your_private_key_here
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./shared:/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - zkbridge-network
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: zkbridge-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - ./shared:/shared
    depends_on:
      - backend
    networks:
      - zkbridge-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  zkbridge-network:
    driver: bridge

